// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/cats": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cats"
                ],
                "summary": "List all cats",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/handler.CatResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new cat with the provided details.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cats"
                ],
                "summary": "Create a new cat",
                "parameters": [
                    {
                        "description": "Cat details",
                        "name": "cat",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.CatRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/handler.CatResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/cats/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cats"
                ],
                "summary": "Get a cat by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Cat ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.CatResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "cats"
                ],
                "summary": "Delete a cat by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Cat ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/cats/{id}/salary": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "cats"
                ],
                "summary": "Update a cat's salary",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Cat ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "New salary",
                        "name": "salary",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.UpdateSalaryRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/missions": {
            "get": {
                "description": "Retrieve a list of all missions.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Missions"
                ],
                "summary": "List all missions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.Mission"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new mission with the provided details.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Missions"
                ],
                "summary": "Create a new mission",
                "parameters": [
                    {
                        "description": "Mission details",
                        "name": "mission",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.MissionDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/domain.Mission"
                        }
                    },
                    "400": {
                        "description": "Wrong request format",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/missions/{id}": {
            "get": {
                "description": "Retrieve a mission by its ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Missions"
                ],
                "summary": "Get a mission by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Mission ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.Mission"
                        }
                    },
                    "400": {
                        "description": "Invalid mission ID",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Mission not found",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing mission with the provided details.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Missions"
                ],
                "summary": "Update a mission",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Mission ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Mission details",
                        "name": "mission",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.MissionDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.Mission"
                        }
                    },
                    "400": {
                        "description": "Invalid mission ID or request format",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a mission by its ID.",
                "tags": [
                    "Missions"
                ],
                "summary": "Delete a mission",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Mission ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Invalid mission ID",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/missions/{id}/cat/{catID}": {
            "post": {
                "description": "Assign a cat to a mission by their IDs.",
                "tags": [
                    "Missions"
                ],
                "summary": "Assign Cat to Mission",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Mission ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Cat ID",
                        "name": "catID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Wrong request format",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/missions/{id}/targets": {
            "post": {
                "description": "Add multiple targets to a mission by its ID.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "Missions"
                ],
                "summary": "Add Targets to Mission",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Mission ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Targets to add",
                        "name": "targets",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/handler.TargetDTO"
                            }
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Invalid request format",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/targets/{id}": {
            "put": {
                "description": "Update an existing target by its ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Targets"
                ],
                "summary": "Update Target",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Target ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Target details",
                        "name": "target",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.Target"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.Target"
                        }
                    },
                    "400": {
                        "description": "Wrong request format or invalid target ID",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a target by its ID.",
                "tags": [
                    "Targets"
                ],
                "summary": "Delete Target",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Target ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Invalid target ID",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/handler.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "domain.Mission": {
            "type": "object",
            "properties": {
                "cat_id": {
                    "type": "integer"
                },
                "completed": {
                    "type": "boolean"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "targets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/domain.Target"
                    }
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "domain.Target": {
            "type": "object",
            "properties": {
                "completed": {
                    "type": "boolean"
                },
                "country": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "mission_id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "notes": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "handler.CatRequest": {
            "type": "object",
            "required": [
                "breed",
                "name",
                "salary",
                "years_of_experience"
            ],
            "properties": {
                "breed": {
                    "type": "string",
                    "example": "Siamese"
                },
                "name": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 2,
                    "example": "Tom"
                },
                "salary": {
                    "type": "number",
                    "minimum": 0,
                    "example": 1200.5
                },
                "years_of_experience": {
                    "type": "integer",
                    "maximum": 50,
                    "minimum": 0,
                    "example": 3
                }
            }
        },
        "handler.CatResponse": {
            "type": "object",
            "properties": {
                "breed": {
                    "type": "string",
                    "example": "Siamese"
                },
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "Tom"
                },
                "salary": {
                    "type": "number",
                    "example": 1200.5
                },
                "years_of_experience": {
                    "type": "integer",
                    "example": 3
                }
            }
        },
        "handler.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "handler.MissionDTO": {
            "type": "object",
            "properties": {
                "cat_id": {
                    "type": "integer",
                    "example": 123
                },
                "completed": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "handler.TargetDTO": {
            "type": "object",
            "properties": {
                "completed": {
                    "type": "boolean",
                    "example": false
                },
                "country": {
                    "type": "string",
                    "example": "Country name"
                },
                "name": {
                    "type": "string",
                    "example": "Target name"
                },
                "notes": {
                    "type": "string",
                    "example": "Additional notes"
                }
            }
        },
        "handler.UpdateSalaryRequest": {
            "type": "object",
            "required": [
                "salary"
            ],
            "properties": {
                "salary": {
                    "type": "number",
                    "minimum": 0,
                    "example": 1300.75
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
